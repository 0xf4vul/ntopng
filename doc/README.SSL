In order to use SSL with ntopng (i.e. HTTPS) you need a certificate; you can create your own self signed certificate (1) or obtain it by a Certification Authorities (CA) (2):
- obtain the .pem files
- concatenate the privateKeyFile(.pem) and the certificate/certificateChainFile(.pem)
- Rename it in ntiong-cert.pem and put inside ntopng/httpdocs/ssl/.

The HTTPS server will start on port 3001

Below you can find instructions on how to run ntopng with either a self signed or a CA certificate generated by Let's Encrypt (https://letsencrypt.org)

==== SELFSIGNED CERTIFICATE ====

1	To create the self-signed certificate you need to:

1.1	Install OpenSSL

	On Debian/Ubuntu: sudo apt-get install openssl
	OnRedHat/CentOS: sudo yum install openssl

  	On OSX do: brew install openssl

1.2 Create your SSL certificate

		inside the ntopng folder execute the command: make cert
		and follow the instruction

1.3	OPTIONAL
   	Depending on the distribution and packager you might need
   	this optional step. 

		Copy in the directory where ntopng is running
		the shared libraries needed to enable SSL.

		- Linux
		ln -s /usr/lib/x86_64-linux-gnu/libssl.so .
		Note that this symbolic link is NOT necessary on all linux
		distros. Example it is not required on Fedora Linux.
		Please check this according to your distribution.

		- OSX
		ln -s /usr/local/Cellar/openssl/1.0.1i/lib/libcrypto.dylib .
		ln -s /usr/local/Cellar/openssl/1.0.1i/lib/libssl.dylib .
   
1.4	Edit ntop.conf to enable https
		Edit the /etc/ntopng/ntopng.conf file to include the text --https-port=3001
		You may choose ports other than 3001 but it must be a different port to the http port which is port 3000 by default
		Alternatively you can disable insecure http altogether by replacing the line -w=3000 with --http-port=0
		(-w and --http-port are interchangeable)
   

1.5	Start ntopng

1.6 OPTIONAL
  	"make cert" will create the certificate but you can see below the
  	exact steps if you want to generate the certificate manually.
  
		You now need to locate your ntopng `share` directory. It is usually located at `/usr/share/ntopng` or at `/usr/local/share/ntopng`.
		The next instructions assume it's located at `/usr/local/share/ntopng`.

		== Ubuntu and Centos packages ==

		cd /tmp/
		openssl req -new -x509 -sha256 -extensions v3_ca -nodes -days 365 -out cert.pem
		cat privkey.pem cert.pem > /usr/local/share/ntopng/httpdocs/ssl/ntopng-cert.pem
		/bin/rm -f privkey.pem cert.pem
		cd /usr/local/bin/
		ln -s /usr/lib/x86_64-linux-gnu/libssl.so .
		ntopng

		== HomeBrew Formula ==

		cd /tmp/
		openssl req -new -x509 -sha256 -extensions v3_ca -nodes -days 365 -out cert.pem
		mkdir /usr/local/share/ntopng/httpdocs/ssl/
		cat privkey.pem cert.pem > /usr/local/share/ntopng/httpdocs/ssl/ntopng-cert.pem
		/bin/rm -f privkey.pem cert.pem
		cd /usr/local/bin/
		ln -s /opt/local/lib/libssl.dylib /opt/local/lib/libcrypto.dylib .
		ntopng



==== CA CERTIFICATE [ Let's Encrypt ] ====

In this section we use a Let's Encript certificate for example, and it is composed by 4 files:
privkey.pem		----> Private Key  
cert.pem 			----> Public Key
chain.pem 		----> Certificate Chain
fullchain.pem ----> Concatenation of cert.pem and chain.pem 

The fullchain.pem file is like this (the concatenation of cert.pem and chain.pem is evident):

		-----BEGIN CERTIFICATE-----
		MIIDjjCCAnYCCQCJdR6v1+W5RzANBgkqhkiG9w0BAQUFADCBiDEUMBI
		[...]							
		rXgaspIi7RA4xkSE7x7B8NbvSlgP79/qUe80Z7d8Oolva6dTZduByr
		mNU=
		-----END CERTIFICATE-----
		-----BEGIN CERTIFICATE-----
		8NbvSlgP79/qUe80Z7d8Ool6v1+W5RzANBgkqhDEUMBIGA1UEAwwL
		[...]							
		kiG9wfFADCBiA4xkSE7x7B8NbvSlgP79/qUe80Z7Byr0CejdfhLhi
		mNU=
		-----END CERTIFICATE-----


The privkey.pem file is like this:

		-----BEGIN PRIVATE KEY-----
		EUMBIGA1UEAwwLetye78s8g89gUIsh9SGW1+W5RzANBgkqhkiG9w0B
		[...]							
		rXgaspIi7RA4xkSE7x7B8NbvSlgP79/qUe80Z7d8Oolva6dTZduByr
		-----END PRIVATE KEY-----

2		To use the certificate from CA you need to:

2.1 Have already obtained the certificate for your domain
		
		with certbot (https://certbot.eff.org/) you can obtain a Let's Encript Certificate for your system

2.2	Create the ntopng-cert
 
		Concatenate the private key with the certificate and the chain, then put in the ssl folder:
		
		# cat privkey.pem fullchain.pem > /ntopng/httpdocs/ssl/ntopng-cert.pem

		The ntopng-cert.pem file will be like this:

				-----BEGIN PRIVATE KEY-----
		EUMBIGA1UEAwwLetye78s8g89gUIsh9SGW1+W5RzANBgkqhkiG9w0B
		[...]							
		rXgaspIi7RA4xkSE7x7B8NbvSlgP79/qUe80Z7d8Oolva6dTZduByr
		-----END PRIVATE KEY-----
		-----BEGIN CERTIFICATE-----
		MIIDjjCCAnYCCQCJdR6v1+W5RzANBgkqhkiG9w0BAQUFADCBiDEUMBI
		[...]							
		rXgaspIi7RA4xkSE7x7B8NbvSlgP79/qUe80Z7d8Oolva6dTZduByr
		mNU=
		-----END CERTIFICATE-----
		-----BEGIN CERTIFICATE-----
		8NbvSlgP79/qUe80Z7d8Ool6v1+W5RzANBgkqhDEUMBIGA1UEAwwL
		[...]							
		kiG9wfFADCBiA4xkSE7x7B8NbvSlgP79/qUe80Z7Byr0CejdfhLhi
		mNU=
		-----END CERTIFICATE-----

		the concatenation of the private key, public key and the chain.

2.3 start ntopng
		
	you can change the listen port of the https server with the -W 
	e.g. "sudo ./ntopng -W 4500" for port 4500
	























