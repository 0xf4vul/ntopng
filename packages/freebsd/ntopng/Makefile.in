# $FreeBSD$

PORTNAME=	ntopng
PORTVERSION=	@NTOPNG_VERS@
CATEGORIES=	net

MAINTAINER=	mainardi@ntop.org
COMMENT=	

WRKSRC=	        ${WRKDIR}
LICENSE=	GPLv3
LICENSE_FILE=	${WRKSRC}/${PORTNAME}/COPYING

USERS=		ntopng
GROUPS=		ntopng

USES=           ssl sqlite mysql

LIB_DEPENDS=	librrd.so:databases/rrdtool \
		libcurl.so:ftp/curl 

# DATADIR gets expanded to PREFIX/share/PORTNAME
# DOCSDIR gets expanded to PREFIX/share/doc/PORTNAME

PLIST_FILES=	${PREFIX}/bin/ntopng \
		${PREFIX}/man/man8/ntopng.8.gz
PLIST_DIRS=     ${DATADIR}/httpdocs/ \
		${DATADIR}/scripts/ \
		${DATADIR}/pro/httpdocs/ \
		${DATADIR}/pro/scripts/ \
		${DOCSDIR}

NO_ARCH=	yes


NTOPNG_HOME=${PWD}/../../../

verify: checksum


pre-fetch:
	echo $(NTOPNG_HOME)
#	 cd ${NTOPNG_HOME}; ./autogen.sh; ./configure; cd -
#	 cd ${NTOPNG_HOME}; gmake geoip; cd - # decide when to do it (e.g., only on sunday)
#	 cd ${NTOPNG_HOME}; gmake -j9; cd -
	cd ${NTOPNG_HOME}../; sudo tar cfvzh ${DISTDIR}/${DISTNAME}.tar.gz \
	ntopng/ntopng \
	ntopng/ntopng.8 ntopng/doc/ \
	ntopng/scripts/ ntopng/httpdocs/ ntopng/pro/scripts/ ntopng/pro/httpdocs/ \
	ntopng/COPYING
	make makesum

do-build:


do-install:
	${INSTALL_PROGRAM} ${WRKSRC}/${PORTNAME}/ntopng \
	    ${STAGEDIR}${PREFIX}/bin

post-install:
#	install the documentation (DOCSDIR gets expanded to PREFIX/share/doc/PORTNAME)
	${MKDIR} ${STAGEDIR}${DOCSDIR}
	(cd ${WRKSRC}/${PORTNAME}/doc && ${COPYTREE_SHARE} . ${STAGEDIR}${DOCSDIR})

#	install the manual
	${MKDIR} ${STAGEDIR}${PREFIX}/man/man8/
	${INSTALL_MAN} ${WRKSRC}/${PORTNAME}/ntopng.8 ${STAGEDIR}${PREFIX}/man/man8/

	${MKDIR} ${STAGEDIR}${DATADIR}/httpdocs
	(cd ${WRKSRC}/${PORTNAME}/httpdocs && ${COPYTREE_SHARE} . ${STAGEDIR}${DATADIR}/httpdocs)

	${MKDIR} ${STAGEDIR}${DATADIR}/scripts
	(cd ${WRKSRC}/${PORTNAME}/scripts && ${COPYTREE_SHARE} . ${STAGEDIR}${DATADIR}/scripts)

#	make a symlink for the pro files
	${RM} -rf ${STAGEDIR}${DATADIR}/scripts/lua/pro
	cd ${STAGEDIR}${DATADIR}/scripts/lua; ln -s ../../pro/scripts/lua pro; cd -

	${MKDIR} ${STAGEDIR}${DATADIR}/pro/httpdocs
	(cd ${WRKSRC}/${PORTNAME}/pro/httpdocs && ${COPYTREE_SHARE} . ${STAGEDIR}${DATADIR}/pro/httpdocs)

	${MKDIR} ${STAGEDIR}${DATADIR}/pro/scripts
	(cd ${WRKSRC}/${PORTNAME}/pro/scripts && ${COPYTREE_SHARE} . ${STAGEDIR}${DATADIR}/pro/scripts)

#	compress the files and build the luar
	find ${STAGEDIR}${DATADIR}/pro -name "*.lua" -type f -exec ${NTOPNG_HOME}pro/utils/snzip -c -i {} -o {}r \;
#	find ${STAGEDIR}${DATADIR}/scripts/lua/pro -name "*.lua" -type f -exec ${NTOPNG_HOME}pro/utils/snzip -c -i {} -o {}r \;

#	remove plaintext lua files
	find ${STAGEDIR}${DATADIR}/pro -name "*.lua" -type f -exec ${RM}  {} ';';
#	find ${STAGEDIR}${DATADIR}/scripts/lua/pro -name "*.lua" -type f -exec ${RM}  {} ';';

#	move the luar as if they were normal lua files for installation
	find ${STAGEDIR}${DATADIR}/pro -name "*.luar" -type f -exec echo {} \; | sed 's/.luar//' | xargs -I '{}' mv '{}'.luar '{}'.lua
#	find ${STAGEDIR}${DATADIR}/scripts/lua/pro -name "*.luar" -type f -exec echo {} \; | sed 's/.luar//' | xargs -I '{}' mv '{}'.luar '{}'.lua

.include <bsd.port.mk>
